name: Distribute to Windows (NSIS)

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  workflow_dispatch:
  push:
    tags:
      - v*
    
jobs:
  build-win:

    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v2
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
      with:
        vs-version: '16.0' # Use the appropriate Visual Studio version, e.g., '16.0' for Visual Studio 2019
    

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
    - run: npm run build
    - run: Remove-Item -path .\dist\win-unpacked\ -recurse  # This will make sure that Build Artifact doesn't take a butt load of time to zip up the dist folder I need

    - name: Set up file name and version
      id: setup-file
      run: |
        echo "const { version } = require('./package.json'); console.log(version);" > getVersion.js
        node getVersion.js > version.txt
        echo "skylinehosting-Setup-$((Get-Content version.txt))" > filename.txt

    - name: Zip dist folder
      run: Compress-Archive -Path .\dist\ -DestinationPath skylinehosting-Setup.zip

    - name: Extract setup exe from zip
      run: Expand-Archive -Path skylinehosting-Setup.zip -DestinationPath extracted

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: skylinehosting-Setup
        path: extracted/skylinehosting-Setup-${{ steps.setup-file.outputs.version }}.exe

    # Step 5: Create a release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    # Step 6: Upload artifact to the release
    - name: Upload Asset
      id: upload_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: extracted/skylinehosting-Setup-${{ steps.setup-file.outputs.version }}
        asset_name: skylinehosting-Setup.exe
